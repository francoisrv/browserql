type Todo {
  title:  String
  done:   Boolean
  id:     UID
}

enum TodoSorter {
  title
  done
  id
}

input TodoFilters {
  limit: Int = 30
  page: Int = 1
  sortBy: TodoSorter
  order: SORT_ORDER = ASCENDING
}

input TodoWhere {
  title: String
  done: Boolean
  id: UID
}

type Query {
  getTodos(where: TodoWhere filters: TodoFilters): [Todo]
  @get(type: "Todo")
  @persist
}

type Mutation {
  addTodo(title: String! done: Boolean = false id: UID): Todo
  @push(type: "Todo")

  markAsDone(id: ID!): Todo
  @update(
    type:   "Todo"
    where:  [{ field: "id" equals: "id" @param }]
    set:    [{ field: "done" to: true }]
  )
}
